@model MangaVillage.Manga
@using MangaVillage.Views.Helpers

@{
    ViewBag.Title = "Edit";
}
@Html.Partial("_Notification")

<h2 class="my-4">Modifica Manga</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group mb-3">
            @Html.LabelFor(model => model.Titolo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Titolo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Titolo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group mb-3">
            @Html.LabelFor(model => model.Autore, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Autore, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Autore, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group mb-3">
            @Html.LabelFor(model => model.AnnoUscita, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AnnoUscita, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AnnoUscita, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group mb-3">
            @Html.LabelFor(model => model.Nazionalita, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Nazionalita, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Nazionalita, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group mb-3">
            @Html.LabelFor(model => model.StatoPubblicazione, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.StatoPubblicazione, new SelectList(new[] { "in corso", "completato" }), htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.StatoPubblicazione, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group mb-3">
            @Html.LabelFor(model => model.Categoria, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.MultiSelectList("CategoriaTendinaSelezione", Model.CategoriaTendina?.Select(c => new SelectListItem { Text = c.Nome, Value = c.ID.ToString() }) ?? Enumerable.Empty<SelectListItem>(), Model.Categoria, "Seleziona Categorie:")
                @Html.ValidationMessageFor(model => model.Categoria, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group mb-3">
            @Html.LabelFor(model => model.Genere, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.MultiSelectList("GenereTendinaSelezione", Model.GenereTendina?.Select(g => new SelectListItem { Text = g.Nome, Value = g.ID.ToString() }) ?? Enumerable.Empty<SelectListItem>(), Model.Genere, "Seleziona Generi:")
                @Html.ValidationMessageFor(model => model.Genere, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group mb-3">
            @Html.LabelFor(model => model.UltimoVolume, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UltimoVolume, new { htmlAttributes = new { @class = "form-control", type = "number", min = Model.UltimoVolume } })
                @Html.ValidationMessageFor(model => model.UltimoVolume, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group mb-3">
            @Html.LabelFor(model => model.Prezzo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Prezzo, new { htmlAttributes = new { @class = "form-control", type = "text", Value = Model.Prezzo } })
                @Html.ValidationMessageFor(model => model.Prezzo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group mb-3">
            @Html.LabelFor(model => model.Copertina, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Copertina, new { htmlAttributes = new { @class = "form-control", type = "file" } })
                @Html.ValidationMessageFor(model => model.Copertina, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group mb-3">
            @Html.LabelFor(model => model.Trama, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Trama, new { @class = "form-control", rows = "7" })
                @Html.ValidationMessageFor(model => model.Trama, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10 d-flex">
                <input type="submit" value="Modifica" class="btn btn-warning me-3" />
                <a class="btn btn-wg" href="@Url.Action("Index")">Lista Manga</a>
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
